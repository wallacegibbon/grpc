-module(statistics_client).

%% this file was generated by grpc

-export([get_stats/3]).

-type
     'type_parameter.stats_type'() :: microstate_accounting.

-type 'thread.thread_type'() :: async | scheduler | aux.

-type counter_stat() :: #{aux => integer(),
                          check_io => integer(), emulator => integer(),
                          other => integer(), port => integer(),
                          sleep => integer()}.

-type type_parameter() :: #{type_field =>
                                'type_parameter.stats_type'() | integer()}.

-type thread() :: #{counters => counter_stat(),
                    id => integer(),
                    type => 'thread.thread_type'() | integer()}.

-type stats() :: #{threads => [thread()]}.

-export_type(['type_parameter.stats_type'/0,
              'thread.thread_type'/0,
              counter_stat/0,
              type_parameter/0,
              thread/0,
              stats/0]).

-spec decoder() -> module().

%% The module (generated by gpb) used to encode and decode protobuf
%% messages.
decoder() -> statistics.

%% RPCs for service get_stats

-spec get_stats(Connection :: grpc_client:connection(),
                Message :: type_parameter(),
                Options :: [grpc_client:stream_option() |
                            {timeout,
                             timeout()}]) -> grpc_client:unary_response(stats()).

%% This is a unary RPC
get_stats(Connection, Message, Options) ->
    grpc_client:unary(Connection,
                      Message,
                      get_stats,
                      get_stats,
                      decoder(),
                      Options).
